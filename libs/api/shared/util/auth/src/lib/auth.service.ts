import { Injectable } from '@nestjs/common';
import { UserModelService } from '@pollate/api/data-access/user';
import * as admin from 'firebase-admin';

@Injectable()
export class AuthService {
  private auth: admin.auth.Auth;

  constructor(private readonly userModelService: UserModelService) {
    this.auth = admin.initializeApp().auth();
  }

  /**
   * If and only if the idToken links to a firebase user which uid matches the db user.
   * Then they are considered validated.
   *
   * * Temporary solution until a better one is required
   *
   * @param idToken - The firebase id token generated by the client login
   * @param userId - The user id the request says it's coming from
   */
  async validate(idToken: string, userId: string): Promise<boolean> {
    try {
      const [firebaseUser, user] = await Promise.all([
        this.auth.verifyIdToken(idToken, true),
        this.userModelService.findUnique(userId),
      ]);

      return firebaseUser.uid === user.uid;
    } catch {
      return false;
    }
  }
}
